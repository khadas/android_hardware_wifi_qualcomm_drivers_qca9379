# Build list

SHELL := /bin/bash
targetList := drivers drivers_firmware 
targetList += wpa_supplicant rootfs_build 

default: ${targetList}

wlan_obj: drivers drivers_firmware wpa_supplicant rootfs_build

wlan_x86_obj: drivers drivers_firmware rootfs_build copy_binary
#################################################################################################################################
export SIGMADUT_TOPDIR=${ATH_TOPDIR}/apps/sigma-dut
export BE_TEST_TOPDIR=${ATH_TOPDIR}/build/scripts/x86
export WLAN_DRIVER_TOPDIR=$(ATH_TOPDIR)/drivers
export ATHDIAG_TOPDIR=${ATH_TOPDIR}/drivers/qcacld-new/tools/athdiag
export WLAN_PATCH_TOPDIR=${ATH_TOPDIR}/drivers/patches/${BOARD_TYPE}/
export BUILD_OUTPUT_DIR=${ATH_TOPDIR}/build/out

#################################################################################################################################
#
# driver patch
#
rome_usb_fw_to_h:
	@echo Transforming Rome usb firmware binaries to header files
	@cd ${ATH_TOPDIR}/build/tools && sudo chmod +x ./bin2hex.sh
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/athsetup.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/athsetup.h athsetup_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/athwlan.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/athwlan.h athwlan_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/fakeboar.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/fakeboar.h fakeboar_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/otp.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/otp.h otp_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/qca61x4.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/qca61x4.h qca61x4_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/utf.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/utf.h utf_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/qcacld-new/firmware_bin/WCNSS_cfg.dat ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/cfg.h cfg_dat
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/qcacld-new/firmware_bin/WCNSS_qcom_cfg.usb.ini ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/qcom_cfg.h qcom_cfg_ini
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/qcacld-new/firmware_bin/WCNSS_qcom_wlan_nv.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/qcom_wlan_nv.h qcom_wlan_nv_bin

drivers_patch:
	@echo Patch drivers
	#@cd ${WLAN_DRIVER_TOPDIR} && patch -s -p0 < patches/
	#@echo Patch wpa_supplicant_8
	#@cd ${WLAN_DRIVER_TOPDIR}/../apps/ && patch -s -p0 < ${WLAN_DRIVER_TOPDIR}/patches/002-wpa_supplicant-for-aio.patch
	#@cd ${WPA_SUPPLICANT_TOPDIR} && cp wpa_supplicant/android.config wpa_supplicant/.config
	#@cd ${WPA_SUPPLICANT_TOPDIR} && cp hostapd/android.config hostapd/.config
drivers_patch_R:
	@echo Revert drivers patch
	#@cd ${WLAN_DRIVER_TOPDIR} && patch -R -p0 < patches/003-cfg80211-backports-3.16.2-1.patch
	#@echo Revert wpa_supplicant_8 patch
	#@cd ${WLAN_DRIVER_TOPDIR}/../apps/ && patch -R -p0 < ${WLAN_DRIVER_TOPDIR}/patches/002-wpa_supplicant-for-aio.patch
	#@cd ${WPA_SUPPLICANT_TOPDIR} && rm wpa_supplicant/.config
	#@cd ${WPA_SUPPLICANT_TOPDIR} && rm hostapd/.config

custom_patch: 
	@echo Patch CLD driver
	@cd ${WLAN_DRIVER_TOPDIR}/qcacld-new && patch -s -p1 < ${WLAN_PATCH_TOPDIR}/nt-r1072-002-qcacld_ss.patch

#	@echo Patch backports
#	@cd ${WLAN_DRIVER_TOPDIR} && patch -s -p0 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/nt-r1072-003-backports.patch
	@echo Patch cfg80211
	@cd ${WLAN_DRIVER_TOPDIR} && patch -s -p0 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/nt-r1072-006-cfg80211.patch
#	@echo Patch wpa_supplicant
#	@cd ${WPA_SUPPLICANT_TOPDIR} && patch -s -p1 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/nt-r1072-001-wpa_supplicant.patch
#	@echo Patch athdiag
#	@cd ${WLAN_DRIVER_TOPDIR} && patch -s -p0 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/nt-r1072-005-athdiag_btdump.patch
	
#################################################################################################################################
#
# Sigma-DUT package
#
sigmadut_build: rootfs_prep sigmadut_clean
	@echo Build Sigma-DUT
	cd $(SIGMADUT_TOPDIR) && \
	${MAKEARCH} && \
	cp $(SIGMADUT_TOPDIR)/sigma_dut $(INSTALL_ROOT)/sbin

sigmadut_clean:
	@echo Clean Sigma-DUT
	cd $(SIGMADUT_TOPDIR) && \
	${MAKEARCH} clean

#################################################################################################################################
#
# athdiag
#
athdiag_build: rootfs_prep athdiag_clean
	@echo Build athdiag tool
	cd $(ATHDIAG_TOPDIR) && \
	${MAKEARCH} && \
	cp $(ATHDIAG_TOPDIR)/athdiag $(INSTALL_ROOT)/sbin

athdiag_clean:
	@echo Clean athdiag tool
	cd $(ATHDIAG_TOPDIR) && \
	${MAKEARCH} clean

#
# SPE_BE_TEST package
#
spe_package:
	@echo Build SPE_BE_TEST
	cd ${BE_TEST_TOPDIR} && \
	./gen_spe_package.sh

#
# copy binary to custom project
#
copy_binary:
	@echo Copy BINARY to ${BOARD_TYPE} project
	cp ${INSTALL_ROOT}/lib/modules/* ${ANDROID_X86_PROJ_VENDOR_PATH} && \
	cp ${INSTALL_ROOT}/lib/firmware/WLAN-firmware/* ${ANDROID_X86_PROJ_WLANFW_PATH} && \
	cp -rf ${INSTALL_ROOT}/lib/firmware/wlan ${ANDROID_X86_PROJ_WLAN_PATH}
	@echo Copy BINARY DONE!
